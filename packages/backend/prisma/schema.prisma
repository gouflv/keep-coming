// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// generate: pnpm exec prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  name            String
  password        String
  email           String
  avatar          String?
  createAt        DateTime  @default(now())
  //
  isEmailValidate Boolean   @default(false)
  isSilent        Boolean   @default(false)
  silentUntil     DateTime?
}

model UserLikedPosts {
  userId   String
  postId   String
  createAt DateTime @default(now())

  @@id([userId, postId])
}

model UserSavedPosts {
  userId   String
  postId   String
  createAt DateTime @default(now())

  @@id([userId, postId])
}

model UserFollowedNodes {
  userId   String
  nodeId   String
  createAt DateTime @default(now())

  @@id([userId, nodeId])
}

model UserFollowedUsers {
  userId         String
  followedUserId String
  createAt       DateTime @default(now())

  @@id([userId, followedUserId])
}

model Node {
  id       String   @id @default(cuid())
  name     String
  icon     String
  sort     Int      @default(0)
  createAt DateTime @default(now())
  group    String
}

model PostCate {
  id       String   @id @default(cuid())
  name     String
  createAt DateTime @default(now())
  sort     Int      @default(0)
  //
  nodeId   String
}

model Post {
  id       String    @id @default(uuid())
  title    String
  content  String
  createAt DateTime  @default(now())
  updateAt DateTime?
  //
  authorId String
  nodeId   String
  cateId   String
}

model PostExtend {
  id            String    @id @default(cuid())
  postId        String
  viewCount     Int       @default(1)
  likeCount     Int       @default(0)
  saveCount     Int       @default(0)
  commentCount  Int       @default(0)
  lastCommentAt DateTime?
  //
  rate          Int       @default(0)
  //
  isCollection  Boolean   @default(false)
  isVideo       Boolean   @default(false)
}

model PostCollectionItems {
  id        String   @id @default(cuid())
  postId    String
  refPostId String
  createAt  DateTime @default(now())
  sort      Int      @default(0)
}

model Comment {
  id       String   @id @default(cuid())
  parentId String?
  content  String
  createAt DateTime @default(now())
  //
  authorId String
  postId   String
}

model NodeManager {
  id        String   @id @default(cuid())
  userId    String
  nodeId    String
  create_at DateTime @default(now())
}
