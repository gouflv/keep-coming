# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Node {
  id: ID!
  name: String!
  parentId: Float!
  children: [Node!]!
}

type User {
  id: ID!
  name: String!
  email: String!
  posts(skip: Int = 0, take: Int = 50, order: PostOrder = {field: CREATE_AT, direction: DESC}): [Post!]!
}

input PostOrder {
  field: PostOrderField!
  direction: OrderDirection
}

enum PostOrderField {
  CREATE_AT
  LAST_REPLY_AT
}

"""A list orderBy direction argument"""
enum OrderDirection {
  ASC
  DESC
}

type Post {
  id: ID!
  title: String!
  content: String!
  create_at: DateTime!
  last_reply_at: DateTime
  authorId: Float!
  author: User!
  nodeId: Float!
  node: Node!
  nodePath: [Node!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PostPaginatedResponse {
  items: [Post!]!
  total: Float!
}

type Query {
  """Look up a user"""
  user(id: Float!): User!

  """Look up a post"""
  post(id: Float!): Post!

  """A list of posts"""
  posts(skip: Int = 0, take: Int = 50, order: PostOrder = {field: CREATE_AT, direction: DESC}, authorId: Float, nodeId: Float): PostPaginatedResponse!

  """Look up a node"""
  node(id: Float!): Node!

  """A list of nodes"""
  nodes: [Node!]!
  login(password: String!, name: String!): String!
}

type Mutation {
  register(addUserInput: AddUserInput!): User!
}

"""User register form data"""
input AddUserInput {
  name: String!
  email: String!
  password: String!
}
